# : << EOF
# https://github.com/gpakosz/.tmux
# (‑●‑●)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012— Gregory Pakosz (@gpakosz).
# /!\ do not edit this file
#     instead, override settings in ~/.tmux.conf.local, see README.md


# -- general -------------------------------------------------------------------
setw -g mode-keys vi
 is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?nvim?x?)(diff)?$'"

# bind-key -T vi 'f' search-down
bind -n C-f if-shell "$is_vim" "send-keys C-f" "copy-mode \; command-prompt -p '(search up)' 'send -X search-backward \"%%%\"'"
bind -T copy-mode-vi C-f if-shell "$is_vim" "send-keys C-f" "copy-mode \; command-prompt -p '(search up)' 'send -X search-backward \"%%%\"'"

bind-key C-f send-keys "tmux capture-pane -p -S - | nvim -c 'set scl=no' -c 'set buftype=nofile' -c 'set nonumber' -c 'setlocal norelativenumber' -c 'set filetype=sh' -c 'normal GKJ\<Esc> <leader>ut' " -c ':g/^$/d' Enter

set -g default-terminal "screen-256color"
setw -g xterm-keys on
set -s escape-time 0                     # faster command sequences
set -sg repeat-time 0                   # increase repeat timeout
set -s focus-events on
set-option -ga terminal-overrides ",xterm-256color:Tc"
set-option -g detach-on-destroy off

# Prefix
unbind C-b
set-option -g prefix M-a
bind-key M-a send-prefix
set -g prefix2  C-a                       # GNU-Screen compatible prefix
bind C-a send-prefix -2
bind-key -n M-a send-prefix -2

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 5000                 # boost history

# edit configuration
bind e new-window -n "~/.tmux.conf.local" sh -c '${EDITOR:-vim} ~/.tmux.conf.local && tmux source ~/.tmux.conf && tmux display "~/.tmux.conf sourced"'

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows
setw -g automatic-rename on   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed
set -g set-titles on          # set terminal title
set -g display-panes-time 1 # slightly longer pane indicators display time
set -g display-time 1      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds
set -g status off

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.2' \; clear-history

# bind-key -n M-n run-shell "tmux neww"
bind-key -n M-f resize-pane -Z

bind-key -r C-g run-shell "tmux neww /home/jferrara/.scripts/tmux-lazygit.sh"

bind-key -r C-t run-shell "tmux neww /home/jferrara/.scripts/jira.sh"
bind-key -r t run-shell "tmux neww /home/jferrara/.scripts/jira.sh"

bind-key -r w run-shell "tmux neww /home/jferrara/.scripts/tmux-wtservice.sh"
bind-key -r C-w run-shell "tmux neww /home/jferrara/.scripts/tmux-wtservice.sh"

bind-key -r e run-shell "tmux neww /home/jferrara/.scripts/tmux-glossary.sh"
bind-key -r C-e run-shell "tmux neww /home/jferrara/.scripts/tmux-wtservice.sh"

bind-key -r c run-shell "tmux neww /home/jferrara/.scripts/tmux-nvim.sh"
bind-key -r C-c run-shell "tmux neww /home/jferrara/.scripts/tmux-nvim.sh"

bind-key -r q run-shell "tmux neww powershell.exe Stop-Computer -force"
bind-key -r r run-shell "tmux neww powershell.exe C://Users/j.ferrara/scripts/reboot.ps1"

bind-key -n C-v run-shell "tmux neww nvim"

# activity
set -g monitor-activity on
set -g visual-activity off
set -g mouse on

# -- navigation ----------------------------------------------------------------

# session navigation
bind BTab switch-client -l  # move to last session

# split current window horizontally
bind - split-window -v
# bind C-s split-window -v
# split current window vertically
bind _ split-window -h
# bind v split-window -h

bind-key -n C-w kill-window
bind -r 'C-n' run-shell "tmux neww sudo nvim -c 'normal p'"

bind -r C-o run-shell "/home/jferrara/.scripts/t-script.sh"
bind -r o run-shell "/home/jferrara/.scripts/t-script.sh"

bind -r C-p run-shell "/home/jferrara/.scripts/v-script.sh"
bind -r p run-shell "/home/jferrara/.scripts/v-script.sh"
bind -rn M-p run-shell "/home/jferrara/.scripts/v-script.sh"

# bind C-f run-shell "/home/jferrara/.scripts/tt.sh"
# bind C-f command-prompt -p find-session 'switch-client -t %%'

# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' { if -F '#{pane_at_left}' 'send-keys C-h' 'select-pane -L' }
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' { if -F '#{pane_at_bottom}' 'send-keys C-j' 'select-pane -D' }
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' 'send-keys C-k' 'select-pane -U' }
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' 'send-keys C-l' 'select-pane -R' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k' { if -F '#{pane_at_top}' 'send-keys C-k' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l' { if -F '#{pane_at_right}' 'send-keys C-l' 'select-pane -R' }

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' 'send-keys C-h' 'select-pane -L' }
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h' { if -F '#{pane_at_left}' 'send-keys C-h' 'select-pane -L' }
# bind-key -n 'C-j' if -F '#{window_zoomed_flag}' "send-keys C-j" { if -F '#{pane_at_bottom}' 'send-keys C-j' 'select-pane -D' }
# bind-key -n 'M-j' if -F '#{window_zoomed_flag}' "send-keys C-j" { if -F '#{pane_at_bottom}' 'send-keys C-j' 'select-pane -D' }

bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j' { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' '' 'select-pane -U' }


bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k' { if -F '#{pane_at_top}' 'send-keys C-k' 'select-pane -U' }
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l' { if -F '#{pane_at_right}' 'send-keys C-l' 'select-pane -R' }
bind-key -n 'M-s' if-shell "$is_vim" 'send-keys M-s' { split-window -h }
bind-key -n 'M-S' if-shell "$is_vim" 'send-keys M-S' { split-window -v }

bind-key -n 'M-1' run-shell "/home/jferrara/.scripts/harpoonier.sh 1"
bind-key -n 'M-2' run-shell "/home/jferrara/.scripts/harpoonier.sh 2"
bind-key -n 'M-3' run-shell "/home/jferrara/.scripts/harpoonier.sh 3"
bind-key -n 'M-4' run-shell "/home/jferrara/.scripts/harpoonier.sh 4"
bind-key -n 'M-5' run-shell "/home/jferrara/.scripts/harpoonier.sh 5"
bind-key -n 'M-6' run-shell "/home/jferrara/.scripts/harpoonier.sh 6"
bind-key -n 'M-7' run-shell "/home/jferrara/.scripts/harpoonier.sh 7"
bind-key -n 'M-8' run-shell "/home/jferrara/.scripts/harpoonier.sh 8"
bind-key -n 'M-9' run-shell "/home/jferrara/.scripts/harpoonier.sh 9"
bind-key -n 'M-0' run-shell "/home/jferrara/.scripts/harpoonier.sh 10"
bind-key -n 'M-d' run-shell "tmux neww nvim -c 'DBUI'"

bind-key -n 'M-C-A' run-shell "/home/jferrara/.scripts/harpoonier.sh 1"
bind-key -n 'M-C-S' run-shell "/home/jferrara/.scripts/harpoonier.sh 2"
bind-key -n 'M-C-D' run-shell "/home/jferrara/.scripts/harpoonier.sh 3"
bind-key -n 'M-C-F' run-shell "/home/jferrara/.scripts/harpoonier.sh 4"
bind-key -n 'M-C-G' run-shell "/home/jferrara/.scripts/harpoonier.sh 5"
bind-key -n 'M-C-h' run-shell "/home/jferrara/.scripts/harpoonier.sh 6"
bind-key -n 'M-C-J' run-shell "/home/jferrara/.scripts/harpoonier.sh 7"
bind-key -n 'M-C-K' run-shell "/home/jferrara/.scripts/harpoonier.sh 8"
bind-key -n 'M-C-L' run-shell "/home/jferrara/.scripts/harpoonier.sh 9"
bind-key -n 'M-C-Ç' run-shell "/home/jferrara/.scripts/harpoonier.sh 10"
# set -g @floax-bind 'M-d'

bind-key -n 'M-m' run-shell "pwd >> /home/jferrara/.scripts/harpoonier.list"

bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 15
bind -r J resize-pane -D 15
bind -r K resize-pane -U 15
bind -r L resize-pane -R 15

# window navigation
# unbind n
unbind p
bind -r n new-window
bind -r h previous-window # select previous window
bind -r l next-window     # select next window
bind -r j switch-client -n
bind -r k switch-client -p

bind -n "F1" if-shell '[ "$(tmux list-windows | wc -l)" -lt 1 ]' 'new-window' 'select-window -t 1'
bind -n "F2" if-shell '[ "$(tmux list-windows | wc -l)" -lt 2 ]' 'new-window' 'select-window -t 2'
bind -n "F3" if-shell '[ "$(tmux list-windows | wc -l)" -lt 3 ]' 'new-window' 'select-window -t 3'

# bind -n "C-u" if-shell '[ "$(tmux list-windows | wc -l)" -lt 1 ]' 'new-window' 'select-window -t 1'
# bind -n "C-i" if-shell '[ "$(tmux list-windows | wc -l)" -lt 2 ]' 'new-window' 'select-window -t 2'
# bind -n "C-o" if-shell '[ "$(tmux list-windows | wc -l)" -lt 3 ]' 'new-window' 'select-window -t 3'

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# -- urlview -------------------------------------------------------------------
bind U run "cut -c3- ~/.tmux.conf | sh -s _urlview #{pane_id}"

# -- copy mode -----------------------------------------------------------------
bind Enter copy-mode # enter copy mode

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi C-v send -X rectangle-toggle
bind -T copy-mode-vi y send -X copy-selection-and-cancel
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi H send -X start-of-line
bind -T copy-mode-vi L send -X end-of-line

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Wayland clipboard
if -b 'command -v wl-copy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | wl-copy"'
# copy to macOS clipboard
if -b 'command -v pbcopy > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | pbcopy"'
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers -------------------------------------------------------------------
bind b list-buffers     # list paste buffers
bind p paste-buffer -p  # paste from the top paste buffer
bind P choose-buffer    # choose which buffer to paste from


# -- 8< ------------------------------------------------------------------------
source -q ~/.tmux.conf.local
run 'cut -c3- ~/.tmux.conf | sh -s _apply_configuration'

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

run '~/.tmux/plugins/tpm/tpm'
